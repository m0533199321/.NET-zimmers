// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zimmers.data;

#nullable disable

namespace zimmers.data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241222221317_relationShips2")]
    partial class relationShips2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("zimmers.core.Entities.Cleaner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank_account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_registration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_for_an_hour_of_work")
                        .HasColumnType("int");

                    b.Property<int>("Total_salary")
                        .HasColumnType("int");

                    b.Property<int>("Total_working_hours")
                        .HasColumnType("int");

                    b.Property<string>("Tz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cleaners");
                });

            modelBuilder.Entity("zimmers.core.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Num_of_nights")
                        .HasColumnType("int");

                    b.Property<DateTime>("Starting_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Total_sum")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<int>("ZimmerId")
                        .HasColumnType("int");

                    b.Property<int>("Zimmer_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ZimmerId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("zimmers.core.Entities.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank_account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_registration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("owners");
                });

            modelBuilder.Entity("zimmers.core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank_account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_registration")
                        .HasColumnType("datetime2");

                    b.Property<int>("Max_amount_per_night")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_of_orders")
                        .HasColumnType("int");

                    b.Property<int>("Num_of_persons")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("zimmers.core.Entities.Zimmer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cleaner_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_of_beds")
                        .HasColumnType("int");

                    b.Property<int>("Num_of_nights_rented")
                        .HasColumnType("int");

                    b.Property<int>("Num_of_rooms")
                        .HasColumnType("int");

                    b.Property<int>("Owner_id")
                        .HasColumnType("int");

                    b.Property<int>("Total_per_night")
                        .HasColumnType("int");

                    b.Property<bool>("Yard_and_pool")
                        .HasColumnType("bit");

                    b.Property<int>("cleanerId")
                        .HasColumnType("int");

                    b.Property<int>("ownerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cleanerId");

                    b.HasIndex("ownerId");

                    b.ToTable("zimmers");
                });

            modelBuilder.Entity("zimmers.core.Entities.Order", b =>
                {
                    b.HasOne("zimmers.core.Entities.User", "User")
                        .WithMany("List_orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("zimmers.core.Entities.Zimmer", "Zimmer")
                        .WithMany("List_orders")
                        .HasForeignKey("ZimmerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Zimmer");
                });

            modelBuilder.Entity("zimmers.core.Entities.Zimmer", b =>
                {
                    b.HasOne("zimmers.core.Entities.Cleaner", "cleaner")
                        .WithMany("List_zimmers")
                        .HasForeignKey("cleanerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("zimmers.core.Entities.Owner", "owner")
                        .WithMany("List_zimmers")
                        .HasForeignKey("ownerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cleaner");

                    b.Navigation("owner");
                });

            modelBuilder.Entity("zimmers.core.Entities.Cleaner", b =>
                {
                    b.Navigation("List_zimmers");
                });

            modelBuilder.Entity("zimmers.core.Entities.Owner", b =>
                {
                    b.Navigation("List_zimmers");
                });

            modelBuilder.Entity("zimmers.core.Entities.User", b =>
                {
                    b.Navigation("List_orders");
                });

            modelBuilder.Entity("zimmers.core.Entities.Zimmer", b =>
                {
                    b.Navigation("List_orders");
                });
#pragma warning restore 612, 618
        }
    }
}
